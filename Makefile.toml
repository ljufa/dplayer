[env]
RPI_HOST = "192.168.5.60"
TARGET = "aarch64-unknown-linux-gnu"
RELEASE_VERSION = "0.4.0"

[config]
default_to_workspace = false


# ---- BUILD Backend----
[tasks.build_release]
install_crate = { crate_name = "cross", binary = "cross", test_arg = "-V", force = false }
command = "cross"
args = [
    "build",
    "--target",
    "${TARGET}",
    "--release",
    "--package",
    "rsplayer",
    "--bin",
    "rsplayer",
]
[tasks.build_ui_release]
cwd = "rsplayer_web_ui"
command = "cargo"
args = ["make", "build_release"]

[tasks.package_deb_release]
install_crate = { crate_name = "cargo-deb", binary = "cargo-deb", test_arg = "--version", force = false }
command = "cargo"
args = [
    "deb",
    "--no-build",
    "-p",
    "rsplayer",
    "--target=${TARGET}",
    "--variant=${TARGET}",
    "--deb-version",
    "${RELEASE_VERSION}",
]

[tasks.librespot_build_release]
cwd = "/tmp"
script = [
    "rm -rf librespot",
    "git clone https://github.com/librespot-org/librespot.git",
    "cd librespot",
    "git checkout master",
    "cp ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/Cross.toml .",
    "cross build --target ${TARGET} --release --no-default-features --features alsa-backend",
    "cp -f target/${TARGET}/release/librespot ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/PKGS/${TARGET}/usr/local/bin",
]

# ---- LINT ----
[tasks.clippy]
description = "Lint with Clippy"
install_crate = { rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--help" }
command = "cargo"
args = [
    "clippy",
    "--fix",
    "--allow-dirty",
    "--all-features",
    "--",
    "--deny",
    "warnings",
    "--deny",
    "clippy::pedantic",
    "--deny",
    "clippy::nursery",
    "--allow",
    "clippy::use_self",
    "--allow",
    "clippy::module_name_repetitions",
    "--allow",
    "clippy::must_use_candidate",
    "--allow",
    "clippy::let_underscore_drop",
    "--allow",
    "clippy::missing_panics_doc",
    "--allow",
    "clippy::missing_errors_doc",
    "--allow",
    "clippy::use_self",

]
[tasks.clippy_in_cross]
description = "Lint with clippy in the pipeline"
command = "cross"
args = [
    "clippy",
    "--target",
    "${TARGET}",
    "--",
    "--deny",
    "warnings",
    "--deny",
    "clippy::pedantic",
    "--deny",
    "clippy::nursery",
    "--allow",
    "clippy::use_self",
    "--allow",
    "clippy::module_name_repetitions",
    "--allow",
    "clippy::must_use_candidate",
    "--allow",
    "clippy::let_underscore_drop",
    "--allow",
    "clippy::missing_panics_doc",
    "--allow",
    "clippy::missing_errors_doc",
    "--allow",
    "clippy::use_self",
]
[tasks.test_in_cross]
command = "cross"
args = ["test", "--target", "${TARGET}"]

[tasks.format]
description = "Format with rustfmt"
command = "cargo"
args = ["fmt"]


# ---- Local DEV ----
[tasks.run_local]
env = { "RUST_LOG" = "rsplayer=debug,warp=debug", "RUST_BACKTRACE" = "full", "RSPLAYER_HTTP_PORT" = "8000" }
cwd = ".run"
command = "cargo"
args = ["run"]


[tasks.copy_remote]
dependencies = ["build_release"]
script = [
    "rsync -avvP --rsync-path=\"sudo rsync\" target/${TARGET}/release/rsplayer pi@${RPI_HOST}:/usr/local/bin",
]

[tasks.package_deb_local]
dependencies = ["build_ui_release", "build_release", "package_deb_release"]


[tasks.librespot_build_local]
cwd = "/tmp"
script = [
    "rm -rf librespot",
    "git clone https://github.com/librespot-org/librespot.git",
    "cd librespot",
    "git checkout master",
    "cargo build --release --no-default-features --features alsa-backend",
    "cp -f target/release/librespot ${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/.run",
    "rm -rf librespot",
]

[tasks.tag]
script = [
    "git tag ${RELEASE_VERSION} main",
    "git push origin ${RELEASE_VERSION}",
]
[tasks.push_docker_cross]
script = [
    "docker build -f Dockerfile.aarch64 . -t ljufa/rsplayer-cross-aarch64:latest",
    "docker push ljufa/rsplayer-cross-aarch64:latest",
    "docker build -f Dockerfile.armv7 . -t ljufa/rsplayer-cross-armv7:latest",
    "docker push ljufa/rsplayer-cross-armv7:latest",
    "docker build -f Dockerfile.x86_64 . -t ljufa/rsplayer-cross-x86_64:latest",
    "docker push ljufa/rsplayer-cross-x86_64:latest",
]
